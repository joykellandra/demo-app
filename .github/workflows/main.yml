name: Build and Deploy to EKS on Fargate

on:
  push:
    branches:
      - main
    
permissions:
   id-token: write
   contents: read
   actions: read
    
jobs:
  build-and-deploy:
     name: Build and Push to ECR
     runs-on: ubuntu-latest
     
     env:
       AWS_REGION: us-east-1
       EKS_CLUSTER_NAME: demo
       
     steps:
     - name: Checkout
       uses: actions/checkout@v3
       
     - name: Set up JDK 19
       uses: actions/setup-java@v1
       with:
         java-version: 19
         
     - name: Set up Apache Maven
       uses: actions/setup-java@v1
       with:
         java-version: 19
         maven-version: 3.x
         
     - name: Build and Package the Application
       run: mvn clean package -DskipTests
       
     - name: Configure AWS Credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: ${{ env.AWS_REGION }}
         
     - name: Login to Amazon ECR
       id: login-ecr
       uses: aws-actions/amazon-ecr-login@v1
       
     - name: Automatic Tagging of Releases
       id: increment-git-tag
       run: |
         bash ./build/git_update.sh -v patch
         
     - name: Build, Tag, and Push the Image to Amazon ECR
       id: build-image
       env:
         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
         ECR_REPOSITORY: demo-app
         IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
         ECR_REPOSITORY_URI: ${{ steps.build-image.outputs.imageUri }}
       run: |
         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
         echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
         
     - name: Install Kubectl
       uses: azure/setup-kubectl@v3
       with: 
          version: 'latest'
          id: install
         
 #    - name: Helm on EKS (with eksctl)
 #      uses: tensor-hq/eksctl-helm-action@0.1.0
      
#     - name: Eksctl Install
#       uses: paunin/kops@v1.0.4

#     - name: Install kubectl
#       run: |
#         curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
#         curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
#         echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
#         sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
#         kubectl version --client
         
     - name: Install Eksctl
       run: |
         curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
         sudo mv /tmp/eksctl /usr/local/bin
         eksctl version
   
     - name: Set up EKS on Fargate Environment
       id: setup-fargate
       run: |
         eksctl create cluster --name $CLUSTER_NAME --fargate
         eksctl create fargateprofile --cluster $CLUSTER_NAME --name staging

     - name: Update Kubeconfig
       id: update-kubeconfig
       run: |
         aws eks --region $AWS_REGION update-kubeconfig --name $EKS_CLUSTER_NAME
         
     - name: Deploy Image to EKS on Fargate
       id: deploy-to-fargate
       env: 
          K8S_YAML_DIR: ./fargate-deployment/K8S
       run: |
         cd $K8S_YAML_DIR
         kubectl apply -f deployment.yaml
         kubectl apply -f service.yaml  
         kubectl rollout restart -f deployment.yaml
    
       
  #   - name: Deploy K8S Yaml
  #     id: deploy-k8s-yaml
  #     env: 
  #       K8S_YAML_DIR: ./fargate-deployment/K8S
  #       IMAGE_NAME: ${{ steps.build-image.outputs.image }}
  #     run: |
  #         cd $K8S_YAML_DIR
  #         kubectl apply -f deployment.yaml
  #         kubectl apply -f service.yaml        
   
#     - name: Install Terraform
#       uses: hashicorp/setup-terraform@v2
#       with:
#         terraform_version: 1.1.7
#         working-directory: /fargate-deployment/terraform
#         tf_actions_command: apply
         
#     - name: Update kubeconfig
#       id: Setup-Kubeconfig
#       run: |
#         aws eks --region $AWS_REGION update-kubeconfig --name $AWS_CLUSTER_NAME

 #    - name: Set up EKS on Fargate Environment
 #      uses: aws-actions/amazon-eks-fargate@v0.1.1
    #   with:
     #    terraform_version: 1.1.7
      #   working-directory: ./fargate-deployment/terraform
       #  tf_actions_command: apply
       
 #    - name: Apply Kubernetes Deployment
 #      run: kubectl apply -f ./fargate-deployment/K8S/deployment.yaml

 #    - name: Apply Kubernetes Service
 #      run: kubectl apply -f ./fargate-deployment/K8S/service.yaml
