name: Build and Deploy to EKS on Fargate

on:
  push:
    branches: [ main ]
    
jobs:
  build-and-deploy:
     name: Build and Push to ECR
     runs-on: ubuntu-latest
     
     env:
       AWS_REGION: us-east-1
     
     steps:
     - name: Checkout
       uses: actions/checkout@v3
       
     - name: Set up JDK 19
       uses: actions/setup-java@v1
       with:
         java-version: 19
         
     - name: Set up Apache Maven
       uses: actions/setup-java@v1
       with:
         java-version: 19
         maven-version: 3.x
         
     - name: Build and Package the Application
       run: mvn clean package -DskipTests
       
     - name: Configure AWS Credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: ${{ env.AWS_REGION }}
         
     - name: Install Terraform
       uses: hashicorp/setup-terraform@v2
       with:
         terraform_version: 1.1.7

     - name: Set up EKS on Fargate Environment
       uses: aws-actions/amazon-eks-fargate@v0.1
       with:
         terraform_version: 1.1.7
         working-directory: ./fargate-deployment/terraform/
         tf_actions_command: apply
         
     - name: Login to Amazon ECR
       id: login-ecr
       uses: aws-actions/amazon-ecr-login@v1
       
     - name: Automatic Tagging of Releases
       id: increment-git-tag
       run: |
         bash ./build/git_update.sh -v patch
         
     - name: Build, Tag, and Push the Image to Amazon ECR
       id: build-image
       env:
         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
         ECR_REPOSITORY: demo-app
         IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
       run: |
         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
         echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
         
     - name: Update kubeconfig
       run: aws eks update-kubeconfig --region $AWS_REGION --name $AWS_CLUSTER_NAME  
        
     - name: Apply Kubernetes Deployment
       run: kubectl apply -f ./fargate-deployment/K8S/deployment.yaml

     - name: Apply Kubernetes Service
       run: kubectl apply -f ./fargate-deployment/K8S/service.yaml
